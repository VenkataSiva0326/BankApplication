name: SonarQube Integration With GitHub

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

# Runs and cancel any other in progress jobs for pull request trigger.
# Runs normally for other triggers (manual run do not cancel previous runs).
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  ci_check:
    runs-on: macos-13
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Xcode select
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '14.3'

    - name: CI check
      run: fastlane ci_check
      env:
        FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 120
        FASTLANE_XCODEBUILD_SETTINGS_RETRIES: 2

    - name: SonarQube scan
      run: |
        HOMEBREW_NO_AUTO_UPDATE=1 brew install sonar-scanner
        brew tap peripheryapp/periphery
        HOMEBREW_NO_AUTO_UPDATE=1 brew install --cask periphery
        sonar-scanner \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    - name: Upload sonar report
      uses: actions/upload-artifact@v3
      with:
        name: Sonar-report
        path: .scannerwork/report-task.txt

    - name: Upload test reports
      uses: actions/upload-artifact@v3
      with:
        name: Test-Reports
        path: fastlane/test_output/report*
      if: always()

    - name: Report tests ruslts
      uses: dorny/test-reporter@v1.6.0
      continue-on-error: true
      if: always()
      with:
        name: Tests results
        path: fastlane/test_output/report.junit
        reporter: jest-junit

  quality_gate_check:
    needs: ci_check
    runs-on: ubuntu-latest
    steps:
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          shell: powershell
          run: |
            .\.sonar\scanner\dotnet-sonarscanner begin /k:"VenkataSiva0326_BankApplication_AY2Hkg5tNYxn_8xsPswE" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
            dotnet build
            .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      - name: Download sonar report
        uses: actions/download-artifact@v3
        with:
          name: Sonar-report
      - name: Display structure of downloaded files
        run: ls -R
      - name: SonarQube quality gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          scanMetadataReportFile: report-task.txt
	    
